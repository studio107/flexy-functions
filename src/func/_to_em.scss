@import 'strip_unit';

/// Converts a pixel value to matching rem value. *Any* value passed, regardless of unit, is assumed to be a pixel value. By default, the base pixel value used to calculate the rem value is taken from the `$global-font-size` variable.
/// @access private
///
/// @param {Number} $value - Pixel value to convert.
/// @param {Number} $base [null] - Base for pixel conversion.
///
/// @returns {Number} A number in rems, calculated based on the given value and the base pixel value. rem values are passed through as is.
@function __to-em($value, $base: null) {
  // Check if the value is a number
  @if type-of($value) != 'number' {
    @warn inspect($value) + ' was passed to rem-calc(), which is not a number.';
    @return $value;
  }

  // Transform em into rem if someone hands over 'em's
  @if unit($value) == 'em' {
    $value: flexy-strip-unit($value) * 1em;
  }

  // Calculate rem if units for $value is not rem or em
  @if unit($value) != 'em' {
    $value: flexy-strip-unit($value) / flexy-strip-unit($base) * 1em;
  }

  // Turn 0rem into 0
  @if $value == 0em {
    $value: 0;
  }

  @return $value;
}

@function flexy-to-em($value, $base: 16px) {
  @if unit($base) == '%' {
    $base: ($base / 100%) * 16px;
  }

  @if unit($base) == 'rem' {
    $base: flexy-strip-unit($base) * 16px;
  }

  @if unit($value) == 'rem' {
    $value: flexy-strip-unit($value) * 16px;
  }

  @return __to-em($value, $base);
}
